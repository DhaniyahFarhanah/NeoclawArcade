//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputSystem/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""Claw"",
            ""id"": ""b79ea7b9-a4b2-4f30-bd6c-ced9916f8610"",
            ""actions"": [
                {
                    ""name"": ""MoveClaw"",
                    ""type"": ""Value"",
                    ""id"": ""08019696-22b4-4311-8c9f-54df1bb2a42d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LowerClaw"",
                    ""type"": ""Button"",
                    ""id"": ""24eb6199-8694-4490-8851-6944cde86be2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RaiseClaw"",
                    ""type"": ""Button"",
                    ""id"": ""52eb7f7f-f529-4267-b424-46ba1a22aa13"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CloseClaw"",
                    ""type"": ""Button"",
                    ""id"": ""bf55bbf9-b75c-4966-b785-d17012ac10e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""946e1c4e-ed5a-4c12-9b31-4057356e897f"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveClaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""7a653d7e-c22a-4312-bf3b-be3ee82ce3fa"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveClaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a066d22f-d204-48c3-8051-c87f63d296e5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveClaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d79a7a18-3c7f-449f-8712-f4432a1a8e17"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveClaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a714acc8-0ed6-4f7c-9eaa-07167c31c520"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveClaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8bd9e0d4-400d-4fcb-9e7f-ba9bc22571df"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveClaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6c4b0af4-2e02-4327-9541-6a2056e10e37"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LowerClaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc0346f4-747b-4055-b9c9-7b2dcd3f41ed"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LowerClaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""333f780f-63b0-41cb-9dfc-e12cf1a5fa18"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RaiseClaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""098a6233-f1d3-4cbc-acbd-b8ed659e2ed4"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RaiseClaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""381c5606-c888-41bc-9385-0163c84209e6"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseClaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a394622d-97ff-4848-9eaa-2806111b8c0c"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseClaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Claw
        m_Claw = asset.FindActionMap("Claw", throwIfNotFound: true);
        m_Claw_MoveClaw = m_Claw.FindAction("MoveClaw", throwIfNotFound: true);
        m_Claw_LowerClaw = m_Claw.FindAction("LowerClaw", throwIfNotFound: true);
        m_Claw_RaiseClaw = m_Claw.FindAction("RaiseClaw", throwIfNotFound: true);
        m_Claw_CloseClaw = m_Claw.FindAction("CloseClaw", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Claw
    private readonly InputActionMap m_Claw;
    private List<IClawActions> m_ClawActionsCallbackInterfaces = new List<IClawActions>();
    private readonly InputAction m_Claw_MoveClaw;
    private readonly InputAction m_Claw_LowerClaw;
    private readonly InputAction m_Claw_RaiseClaw;
    private readonly InputAction m_Claw_CloseClaw;
    public struct ClawActions
    {
        private @PlayerInputs m_Wrapper;
        public ClawActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveClaw => m_Wrapper.m_Claw_MoveClaw;
        public InputAction @LowerClaw => m_Wrapper.m_Claw_LowerClaw;
        public InputAction @RaiseClaw => m_Wrapper.m_Claw_RaiseClaw;
        public InputAction @CloseClaw => m_Wrapper.m_Claw_CloseClaw;
        public InputActionMap Get() { return m_Wrapper.m_Claw; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ClawActions set) { return set.Get(); }
        public void AddCallbacks(IClawActions instance)
        {
            if (instance == null || m_Wrapper.m_ClawActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ClawActionsCallbackInterfaces.Add(instance);
            @MoveClaw.started += instance.OnMoveClaw;
            @MoveClaw.performed += instance.OnMoveClaw;
            @MoveClaw.canceled += instance.OnMoveClaw;
            @LowerClaw.started += instance.OnLowerClaw;
            @LowerClaw.performed += instance.OnLowerClaw;
            @LowerClaw.canceled += instance.OnLowerClaw;
            @RaiseClaw.started += instance.OnRaiseClaw;
            @RaiseClaw.performed += instance.OnRaiseClaw;
            @RaiseClaw.canceled += instance.OnRaiseClaw;
            @CloseClaw.started += instance.OnCloseClaw;
            @CloseClaw.performed += instance.OnCloseClaw;
            @CloseClaw.canceled += instance.OnCloseClaw;
        }

        private void UnregisterCallbacks(IClawActions instance)
        {
            @MoveClaw.started -= instance.OnMoveClaw;
            @MoveClaw.performed -= instance.OnMoveClaw;
            @MoveClaw.canceled -= instance.OnMoveClaw;
            @LowerClaw.started -= instance.OnLowerClaw;
            @LowerClaw.performed -= instance.OnLowerClaw;
            @LowerClaw.canceled -= instance.OnLowerClaw;
            @RaiseClaw.started -= instance.OnRaiseClaw;
            @RaiseClaw.performed -= instance.OnRaiseClaw;
            @RaiseClaw.canceled -= instance.OnRaiseClaw;
            @CloseClaw.started -= instance.OnCloseClaw;
            @CloseClaw.performed -= instance.OnCloseClaw;
            @CloseClaw.canceled -= instance.OnCloseClaw;
        }

        public void RemoveCallbacks(IClawActions instance)
        {
            if (m_Wrapper.m_ClawActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IClawActions instance)
        {
            foreach (var item in m_Wrapper.m_ClawActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ClawActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ClawActions @Claw => new ClawActions(this);
    public interface IClawActions
    {
        void OnMoveClaw(InputAction.CallbackContext context);
        void OnLowerClaw(InputAction.CallbackContext context);
        void OnRaiseClaw(InputAction.CallbackContext context);
        void OnCloseClaw(InputAction.CallbackContext context);
    }
}
